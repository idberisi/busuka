<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Jalur extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Jalur_model');
    } 

    /*
     * Listing of jalur
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('jalur/index?');
        $config['total_rows'] = $this->Jalur_model->get_all_jalur_count();
        $this->pagination->initialize($config);

        $data['jalur'] = $this->Jalur_model->get_all_jalur($params);
        
        $data['_view'] = 'jalur/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new jalur
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('urutan','Urutan','numeric');
		$this->form_validation->set_rules('id_halte','Id Halte','required');
		$this->form_validation->set_rules('id_rute','Id Rute','required');
		$this->form_validation->set_rules('type','Type','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'id_halte' => $this->input->post('id_halte'),
				'id_rute' => $this->input->post('id_rute'),
				'type' => $this->input->post('type'),
				'urutan' => $this->input->post('urutan'),
            );
            
            $jalur_id = $this->Jalur_model->add_jalur($params);
            redirect('jalur/index');
        }
        else
        {
			$this->load->model('Halte_model');
			$data['all_halte'] = $this->Halte_model->get_all_halte();

			$this->load->model('Rute_model');
			$data['all_rute'] = $this->Rute_model->get_all_rute();
            
            $data['_view'] = 'jalur/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a jalur
     */
    function edit($id)
    {   
        // check if the jalur exists before trying to edit it
        $data['jalur'] = $this->Jalur_model->get_jalur($id);
        
        if(isset($data['jalur']['id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('urutan','Urutan','numeric');
			$this->form_validation->set_rules('id_halte','Id Halte','required');
			$this->form_validation->set_rules('id_rute','Id Rute','required');
			$this->form_validation->set_rules('type','Type','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'id_halte' => $this->input->post('id_halte'),
					'id_rute' => $this->input->post('id_rute'),
					'type' => $this->input->post('type'),
					'urutan' => $this->input->post('urutan'),
                );

                $this->Jalur_model->update_jalur($id,$params);            
                redirect('jalur/index');
            }
            else
            {
				$this->load->model('Halte_model');
				$data['all_halte'] = $this->Halte_model->get_all_halte();

				$this->load->model('Rute_model');
				$data['all_rute'] = $this->Rute_model->get_all_rute();

                $data['_view'] = 'jalur/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The jalur you are trying to edit does not exist.');
    } 

    /*
     * Deleting jalur
     */
    function remove($id)
    {
        $jalur = $this->Jalur_model->get_jalur($id);

        // check if the jalur exists before trying to delete it
        if(isset($jalur['id']))
        {
            $this->Jalur_model->delete_jalur($id);
            redirect('jalur/index');
        }
        else
            show_error('The jalur you are trying to delete does not exist.');
    }
    
}
